services:
  caddy:
    container_name: hello-k8s-caddy-dev
    image: caddy:2.10.0-alpine
    restart: unless-stopped
    ports:
      - 8080:80
    volumes:
      - ./caddy/Caddyfile.dev:/etc/caddy/Caddyfile
      - ./caddy/data:/data
      - ./caddy/config:/config
    depends_on:
      next-app:
        condition: service_started
      backend:
        condition: service_healthy
  next-app:
    container_name: hello-k8s-next-app-dev
    image: hello-k8s-next-app-dev
    build:
      context: ./next-app
      dockerfile: dev.Dockerfile

    # Set environment variables directly in the compose file
    # environment:
    #   NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}

    volumes:
      - ./next-app/src:/app/src
      - ./next-app/public:/app/public
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
  backend:
    container_name: hello-k8s-backend-dev
    image: hello-k8s-backend-dev
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/src:/app/src
    restart: unless-stopped
    ports:
      - 4000:4000
    command:
      "npm run dev"
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:4000/api/health"]
      interval: 2s
      timeout: 5s
      retries: 15
  redis:
    image: redis:7.4.1-alpine
    # ports:
    #   - 6379:6379
    volumes:
      - "./redis/data:/data"
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 2s
      timeout: 5s
      retries: 15
