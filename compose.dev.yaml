services:
  caddy:
    container_name: hello-k8s-caddy-dev
    image: caddy:2.10.0-alpine
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./caddy/caddy:/etc/caddy:ro
      - ./caddy/data:/data
      - ./caddy/config:/config
    depends_on:
      next-app:
        condition: service_started
      backend:
        condition: service_healthy
  next-app:
    container_name: hello-k8s-next-app-dev
    image: hello-k8s-next-app-dev
    build:
      context: ./next-app
      dockerfile: dev.Dockerfile

    # Set environment variables directly in the compose file
    # environment:
    #   NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}

    volumes:
      - ./next-app/src:/app/src
      - ./next-app/public:/app/public
    restart: unless-stopped
    ports:
      - 3000:3000
    depends_on:
      backend:
        condition: service_healthy
  backend:
    container_name: hello-k8s-backend-dev
    image: hello-k8s-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/src:/app/src
    restart: unless-stopped
    ports:
      - 4000:4000
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command:
      "npm run dev:express"
    depends_on:
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/api/health"]
      interval: 2s
      timeout: 5s
      retries: 15
  worker:
    container_name: hello-k8s-worker-dev
    image: hello-k8s-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/src:/app/src
    restart: unless-stopped
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command:
      "npm run dev:worker"
    depends_on:
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
  redis:
    image: redis:7.4.1-alpine
    # ports:
    #   - 6379:6379
    volumes:
      - "./redis/data:/data"
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 2s
      timeout: 5s
      retries: 15
  minio:
    container_name: hello-k8s-minio
    image: minio/minio:RELEASE.2025-05-24T17-08-30Z
    volumes:
      - "./minio/data:/data"
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: minio server --console-address ":9001" /data
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 5s
      retries: 5
